//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "UDictionaryMed.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "DBAxisGridsEh"
#pragma link "DBGridEh"
#pragma link "DBGridEhGrouping"
#pragma link "DBGridEhToolCtrls"
#pragma link "DynVarsEh"
#pragma link "GridsEh"
#pragma link "ToolCtrlsEh"
#pragma resource "*.dfm"
TFDictionaryMed *FDictionaryMed;
//---------------------------------------------------------------------------
__fastcall TFDictionaryMed::TFDictionaryMed(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
AnsiString __fastcall TFDictionaryMed::getStrValue(AnsiString val){
	if(val.IsEmpty())
		return NULL;
	else
		return "'" + val + "'";
}
//---------------------------------------------------------------------------
void __fastcall TFDictionaryMed::setView(){
	BAdd->Enabled = false;
	BEdit->Enabled = false;
	BDelete->Enabled = false;
	BSafeMed->Enabled = true;

	EOtch->Color = clWhite;
	EName->Color = clWhite;
	ESurname->Color = clWhite;
	ELogin->Color = clWhite;
	EPassword->Color = clWhite;
	DBLookupComboBoxOffice->Color = clWhite;

	EOtch->Enabled = true;
	EName->Enabled = true;
	ESurname->Enabled = true;
	ELogin->Enabled = true;
	EPassword->Enabled = true;
	DBLookupComboBoxOffice->Enabled = true;
}
//---------------------------------------------------------------------------
void __fastcall TFDictionaryMed::EOtchExit(TObject *Sender)
{
	EOtch->Text = EOtch->Text.UpperCase();
}
//---------------------------------------------------------------------------
void __fastcall TFDictionaryMed::ENameExit(TObject *Sender)
{
	EName->Text = EName->Text.UpperCase();
}
//---------------------------------------------------------------------------
void __fastcall TFDictionaryMed::ESurnameExit(TObject *Sender)
{
	ESurname->Text = ESurname->Text.UpperCase();
}
//---------------------------------------------------------------------------
void __fastcall TFDictionaryMed::FormShow(TObject *Sender)
{
    DBLookupComboBoxOffice->KeyValue = NULL;
	if(DMAvtoriz->DSAvtoriz->DataSet->FieldByName("login")->AsAnsiString != "admin"){
		DMAvtoriz->SQLQCatalogMed->Close();
		DMAvtoriz->SQLQCatalogMed->SQL->Text = "SELECT `user`.`id_user`,`surname`,`name`,`patronymic`,`login`,`name_office` "
			"FROM `user` INNER JOIN `office` ON `user`.`id_office` = `office`.`id_office` "
			"WHERE `user`.`id_user` > 2";
	}else{
    	DMAvtoriz->SQLQCatalogMed->Close();
		DMAvtoriz->SQLQCatalogMed->SQL->Text = "SELECT `user`.`id_user`,`surname`,`name`,`patronymic`,`login`,`name_office` "
			"FROM `user` INNER JOIN `office` ON `user`.`id_office` = `office`.`id_office` WHERE `user`.`id_user` > 1";
	}

	DMAvtoriz->SQLQCatalogMed->Open();
	DMAvtoriz->CDSCatalogMed->Close();
	DMAvtoriz->CDSCatalogMed->Open();

	DMAvtoriz->SQLQgetListOffice->Open();
	DMAvtoriz->CDSgetListOffice->Open();
	BCancelClick(Sender);
}
//---------------------------------------------------------------------------
void __fastcall TFDictionaryMed::FormClose(TObject *Sender, TCloseAction &Action)
{
	DMAvtoriz->SQLQCatalogMed->Close();
	DMAvtoriz->CDSCatalogMed->Close();
	DMAvtoriz->SQLQgetListOffice->Close();
	DMAvtoriz->CDSgetListOffice->Close();
	BCancelClick(Sender);
}
//---------------------------------------------------------------------------

void __fastcall TFDictionaryMed::BAddClick(TObject *Sender)
{
	chooseSafe = 1;   //set add
	setView();
}
//---------------------------------------------------------------------------

void __fastcall TFDictionaryMed::BEditClick(TObject *Sender)
{
	chooseSafe = 2;     //set editing
	setView();

	DMAvtoriz->SQLQCatalogMed->Close();
	DMAvtoriz->SQLQCatalogMed->SQL->Text = "SELECT `id_user`,`surname`,`name`,`patronymic`,`login`,`id_office` "
			"FROM `user` WHERE `id_user` = '" + DBGrCatalogMed->DataSource->DataSet->FieldByName("id_user")->AsAnsiString + "'";


	DMAvtoriz->SQLQCatalogMed->Open();
	DMAvtoriz->CDSCatalogMed->Close();
	DMAvtoriz->CDSCatalogMed->Open();

	EOtch->Text = DMAvtoriz->DSCatalogMed->DataSet->FieldByName("patronymic")->AsAnsiString;
	EName->Text = DMAvtoriz->DSCatalogMed->DataSet->FieldByName("name")->AsAnsiString;
	ESurname->Text = DMAvtoriz->DSCatalogMed->DataSet->FieldByName("surname")->AsAnsiString;
	ELogin->Text = DMAvtoriz->DSCatalogMed->DataSet->FieldByName("login")->AsAnsiString;
	DBLookupComboBoxOffice->KeyValue = DMAvtoriz->DSCatalogMed->DataSet->FieldByName("id_office")->AsAnsiString;
}
//---------------------------------------------------------------------------

void __fastcall TFDictionaryMed::BCancelClick(TObject *Sender)
{
	BAdd->Enabled = true;
	BEdit->Enabled = true;
	BDelete->Enabled = true;

	BSafeMed->Enabled = false;

	EOtch->Color = clBtnFace;
	EName->Color = clBtnFace;
	ESurname->Color = clBtnFace;
	ELogin->Color = clBtnFace;
	EPassword->Color = clBtnFace;
	DBLookupComboBoxOffice->Color = clBtnFace;

	EOtch->Text = "";
	EName->Text = "";
	ESurname->Text = "";
	ELogin->Text = "";
	EPassword->Text = "";

	EOtch->Enabled = false;
	EName->Enabled = false;
	ESurname->Enabled = false;
	ELogin->Enabled = false;
	EPassword->Enabled = false;
	DBLookupComboBoxOffice->Enabled = false;
}
//---------------------------------------------------------------------------


void __fastcall TFDictionaryMed::BSafeMedClick(TObject *Sender)
{
	DMAvtoriz->SQLQCatalogMed->Close();
	switch(chooseSafe){
		case 1: DMAvtoriz->SQLQCatalogMed->SQL->Text = 	"INSERT INTO `user` (`name`,`surname`,`patronymic`,`login`,`password`,`id_office`) "
									"VALUES('"+ EName->Text +"','"+ ESurname->Text +"','"+ EOtch->Text +"',"
									"'"+ ELogin->Text +"',"+ getStrValue(FAvtoriz->MD5(EPassword->Text)) +","
									+ getStrValue(DBLookupComboBoxOffice->ListSource->DataSet->FieldByName("id_office")->AsAnsiString) +")";
				break;
		case 2:
				if(DMAvtoriz->DSAvtoriz->DataSet->FieldByName("login")->AsAnsiString != "admin"){
					if(DMAvtoriz->DSAvtoriz->DataSet->FieldByName("login")->AsAnsiString != DBGrCatalogMed->DataSource->DataSet->FieldByName("login")->AsAnsiString){
						MessageBox(0,L"Вы не можете редактировать чужие данные!\nОбратитесь к администратору программы.",L"Сообщение",MB_OK);
						return;
					}
				}
					DMAvtoriz->SQLQCatalogMed->SQL->Text = 	"UPDATE `user` SET `name` = '"+EName->Text+"',"
														"`surname` = '"+ESurname->Text+"',"
														"`patronymic` = '"+EOtch->Text+"',"
														"`login` = '"+ELogin->Text+"',"
														"`password` = "+getStrValue(FAvtoriz->MD5(EPassword->Text))+","
														"`id_office` = "+getStrValue(DBLookupComboBoxOffice->ListSource->DataSet->FieldByName("id_office")->AsAnsiString)+" "
														"WHERE `id_user` = '"+DBGrCatalogMed->DataSource->DataSet->FieldByName("id_user")->AsAnsiString+"'";

				break;
	}

	DMAvtoriz->SQLConnectKKMP->StartTransaction(trans);
	try{
		if(DMAvtoriz->SQLQCatalogMed->ExecSQL()){
			DMAvtoriz->SQLConnectKKMP->Commit(trans);
		}else{
			DMAvtoriz->SQLConnectKKMP->Rollback(trans);
			MessageBox(0,L"Запрос вернул \"false\"!\nОбратитесь к разработчику.",L"Ошибка",MB_OK);
		}
	}catch(Exception &e){
		DMAvtoriz->SQLConnectKKMP->Rollback(trans);
		switch(chooseSafe){
			case 1: MessageBox(0,e.Message.c_str(),L"Ошибка записи",MB_OK);
				break;
			case 2: MessageBox(0,e.Message.c_str(),L"Ошибка редактирования",MB_OK);
				break;
		}
	}

	FormShow(Sender);
}
//---------------------------------------------------------------------------

void __fastcall TFDictionaryMed::BDeleteClick(TObject *Sender)
{
	if(DMAvtoriz->DSAvtoriz->DataSet->FieldByName("login")->AsAnsiString != "admin"){
		MessageBox(0,L"Для удаления пользователя\nиспользуйте учетную запись администратора.\nУдаление прервано.",L"Сообщение",MB_OK);
		return;
	}

	if(DBGrCatalogMed->DataSource->DataSet->FieldByName("id_user")->AsInteger < 3){
		if(DBGrCatalogMed->DataSource->DataSet->FieldByName("id_user")->AsInteger == 2)
			MessageBox(0,L"Нельзя удалить администратора программы!",L"Сообщение",MB_OK);
		else
			MessageBox(0,L"Не выбран сотрудник!",L"Сообщение",MB_OK);
		return;
	}

	int mess = MessageBox(0,L"Удалить выбранного сотрудника?",L"Предупреждение",MB_YESNO);
	if(mess == 6){
		try{
			DMAvtoriz-> SQLConnectKKMP->StartTransaction(trans);
			DMAvtoriz->SQLQCatalogMed->Close();

			DMAvtoriz->SQLQCatalogMed->SQL->Text =
				"UPDATE `office` SET `office`.`id_user` = '0' "
				"WHERE `office`.`id_user` = '"
				+DBGrCatalogMed->DataSource->DataSet->FieldByName("id_user")->AsAnsiString+"'";

			DMAvtoriz->SQLQCatalogMed->ExecSQL();

			DMAvtoriz->SQLQCatalogMed->Close();

			DMAvtoriz->SQLQCatalogMed->SQL->Text =
				"DELETE FROM `user` WHERE `id_user` = '"
				+DBGrCatalogMed->DataSource->DataSet->FieldByName("id_user")->AsAnsiString+"'";

			if(DMAvtoriz->SQLQCatalogMed->ExecSQL()){
				DMAvtoriz->SQLConnectKKMP->Commit(trans);
			}else{
				DMAvtoriz->SQLConnectKKMP->Rollback(trans);
				MessageBox(0,L"Запрос в \"delete from user\" вернул \"false\"!\nОбратитесь к разработчику.",L"Ошибка",MB_OK);
			}
		}catch(Exception &e){
			DMAvtoriz->SQLConnectKKMP->Rollback(trans);
			MessageBox(0,e.Message.c_str(),L"Ошибка удаления",MB_OK);
		}

		FormShow(Sender);
	}
}
//---------------------------------------------------------------------------

